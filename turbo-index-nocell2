#!/bin/sh

# Split a large indexing job into many small tasks and submit using SLURM

# ./turbo-index my-files.lst label my.geom /location/for/streams

# Copyright Â© 2016-2020 Deutsches Elektronen-Synchrotron DESY,
#                       a research centre of the Helmholtz Association.
#
# Authors:
#   2016      Steve Aplin <steve.aplin@desy.de>
#   2016-2017 Thomas White <taw@physics.org>

SPLIT=1000  # Size of job chunks
#MAIL=gketawal@asu.edu  # Email address for SLURM notifications

INPUT=$1
RUN=$2
GEOM=$3
STREAMDIR=$4

# Set up environment here if necessary
#source /path/to/crystfel/setup.sh

# Generate event list from file above
#while IFS= read -r file
#do
#    echo "Processing file: $file"
#    
#    # Run list_events on each individual file
#    list_events -i "$file" -g "$GEOM" -o "events-${RUN}.lst"
#    
#    # Check if list_events succeeded (exit status 0) or failed (non-zero exit status)
#    if [ $? != 0 ]; then
#        echo "list_events failed for file: $file"
#        # Log the failure, but don't exit; continue with the next file
#    fi
#
#done < "$INPUT"

#cat events-*.lst >> events-${RUN}.lst

while true; do
result=$(list_events -i "$INPUT" -g "$GEOM" -o "events-${RUN}.lst" 2>&1)
if [ $? != 0 ]; then
    failed_line=$(echo "$result" | grep "Failed to read" | awk '{print $NF}')
    echo "-------------------------------"
    echo "  list_events failed for $failed_line"
    sed -i "\#$failed_line#d" "$INPUT"
    rm "events-${RUN}.lst"
    # break  
    # echo "list_events failed"
      # exit 1
else
    break
fi
done
#exit

# If you are using single-event files instead of multi-event ("CXI") ones,
# comment out the above lines and uncomment the following one:
#cp $INPUT events-${RUN}.lst

# Count total number of events
wc -l events-${RUN}.lst

# Split the events up, will create files with $SPLIT lines
split -a 3 -d -l $SPLIT events-${RUN}.lst split-events-${RUN}.lst

ls split-events-${RUN}.lst
# Clean up
rm -f events-${RUN}.lst

# Loop over the event list files, and submit a batch job for each of them
for FILE in split-events-${RUN}.lst*; do

    # Stream file is the output of crystfel
    STREAM=`echo $FILE | sed -e "s/split-events-${RUN}.lst/${RUN}.stream/"`

    # Job name
    NAME=`echo $FILE | sed -e "s/split-events-${RUN}.lst/${RUN}-/"`

    # Job number
    NUMBER=${NAME##$RUN-}
    POS=`expr $NUMBER \* $SPLIT + 1`

    echo "$NAME (serial start $POS): $FILE  --->  $STREAM"

    SLURMFILE="${NAME}.sh"

    echo "#!/bin/sh" > $SLURMFILE
    echo >> $SLURMFILE

    echo "#SBATCH --partition=htc" >> $SLURMFILE  # Set your partition here
    echo "#SBATCH --time=0-04:00:00" >> $SLURMFILE
    echo "#SBATCH --nodes=1" >> $SLURMFILE
    echo "#SBATCH --cores=16" >> $SLURMFILE
    # It may be polite to set the priority very low to allow other jobs through:
    #echo "#SBATCH --nice=100" >> $SLURMFILE
    echo >> $SLURMFILE

    echo "#SBATCH --job-name  $NAME" >> $SLURMFILE
    echo "#SBATCH --output    $NAME-%N-%j.out" >> $SLURMFILE
    echo "#SBATCH --error     $NAME-%N-%j.err" >> $SLURMFILE
    #echo "#SBATCH --mail-type END" >> $SLURMFILE
    #echo "#SBATCH --mail-user $MAIL" >> $SLURMFILE
    echo >> $SLURMFILE

    echo "#source /path/to/crystfel/setup.sh" >> $SLURMFILE  # Set up environment here (again) if necessary
    echo >> $SLURMFILE

    command="indexamajig -i $FILE -o $STREAMDIR/$STREAM --serial-start=$POS --no-non-hits-in-stream"
    command="$command -j \`nproc\` -g $GEOM"
    command="$command --peaks=peakfinder8 --threshold=100 --min-peaks=10 --min-snr=7 --min-pix-count=2 --max-pix-count=20 --local-bg-radius=3 --min-res=80 --max-res=1000 --peak-radius=3.0,5.0,7.0 "  # Peak Finding parameters here
    command="$command --indexing=mosflm,xgandalf,asdf,dirax --multi --check-peaks " # Indexing parameters here
    command="$command --integration rings --int-radius=3.0,5.0,7.0" #Integration parameters here

    echo $command >> $SLURMFILE

    sbatch $SLURMFILE

done
